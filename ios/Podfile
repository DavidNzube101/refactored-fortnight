# Podfile
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require 'json'
podfile_properties = JSON.parse(File.read('./Podfile.properties.json')) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
use_modular_headers!

# Prepare React Native project
prepare_react_native_project!

target 'TaxidoUserUI' do
  # Integrate Expo modules
  use_native_modules!

  # Firebase dependencies
  pod 'gRPC-Core', '~> 1.65.0'
  pod 'gRPC-C++', '~> 1.65.0'
  pod 'FirebaseCoreExtension', '~> 11.8.0'

  # Explicitly include React-Core for RCTEventDispatcher
  pod 'React-Core', :path => '../node_modules/react-native'

  # Explicitly include RNCClipboard and RNReanimated
  pod 'RNCClipboard', :path => '../node_modules/@react-native-clipboard/clipboard'
  pod 'RNReanimated', :path => '../node_modules/react-native-reanimated'

  # Configure native modules
  if podfile_properties['EXPO_USE_COMMUNITY_AUTOLINKING'].nil? || podfile_properties['EXPO_USE_COMMUNITY_AUTOLINKING'] == 'true'
    config = use_native_modules!
  else
    use_autolinking_script!('../node_modules/expo-modules-autolinking/ios')
    config = {}
  end

  # Configure frameworks
  if podfile_properties['ios.useFrameworks'].nil?
    use_frameworks! :linkage => ENV['USE_FRAMEWORKS'] == 'static' ? :static : :dynamic
  else
    use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym
  end

  # Integrate React Native
  use_react_native!(
    :path => config[:reactNativePath] || '../node_modules/react-native',
    :hermes_enabled => podfile_properties['reactNative.hermesEnabled'] || true,
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['ios.privacyFileAggregationEnabled'] || false
  )

  # Post-install configuration
  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath] || '../node_modules/react-native',
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['reactNative.ccacheEnabled'] == 'true'
    )

    # Workaround for Xcode 14: disable code signing for resource bundles
    installer.generated_projects.each do |project|
      project.targets.each do |target|
        target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end

    # Ensure MobileCoreServices is linked for RNCClipboard
    installer.pods_project.targets.each do |target|
      if target.name == 'RNCClipboard'
        target.build_configurations.each do |config|
          config.build_settings['OTHER_LDFLAGS'] ||= ['$(inherited)']
          config.build_settings['OTHER_LDFLAGS'] << '-framework MobileCoreServices'
        end
      end
    end

    # Ensure React-Core is linked for RNReanimated
    installer.pods_project.targets.each do |target|
      if target.name == 'RNReanimated'
        target.build_configurations.each do |config|
          config.build_settings['OTHER_LDFLAGS'] ||= ['$(inherited)']
          config.build_settings['OTHER_LDFLAGS'] << '-framework React-Core'
        end
      end
    end
  end
end